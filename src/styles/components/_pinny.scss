// Pinny
// =====
//
//
// Notes:
//
// 1. The exact position (top, right, bottom, left) is added automatically by
//    Pinny. The positioning can be configured by using Pinny's `coverage` API,
//    which is explained [here](https://github.com/mobify/pinny#coverage)
// 2. The display is automatically set to "block" by Pinny on open.
// 3. Avoid content bleed through.
// 4. Hide the outline when Pinny is focused for screen readers
// 5. Pinny shows a tap highlight when tapped for an unknown reason. This
//    removes that.

.pinny {
    position: fixed; // 1
    
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    background: white; // 3
    outline: none; // 4

    -webkit-tap-highlight-color: rgba(black, 0); // 5
}

// Pinny: Wrapper
// --------------
//
// The Pinny Wrapper is responsible for applying a flex context that will layout
// the children inside (i.e. header, content and footer).
//
// This is added to the markup automatically by Pinny, so no need to include in
// any authored code.
//
//
// Notes:
//
// 1. The relevant flex children are the `.pinny__header`, `.pinny__footer`
//    and `.pinny__content`

.pinny__wrapper {
    display: flex; // 1
    overflow: hidden;
    flex-direction: column;
    height: 100%;
}



// Pinny: Header & Footer
// ----------------------
//
// The header is the top section of a Pinny modal. Typically holds a heading or
// title.
//
// There is no footer by default. However, you can pass HTML to Pinny via its API,
// as explained [here](https://github.com/mobify/pinny#footer)
//
//
// Notes:
//
// 1. `display: flex` is coming from `.pinny__wrapper`
// 2. This prevents the header and footer from being forced to shrink relative to
//    other flex children (read: the content) â€“ in other words, the header and
//    footer will not shrink to accomodate the `.pinny__content` element

.pinny__header,
.pinny__footer {
    flex-shrink: 0; // 1, 2
}


// Pinny: Content
// --------------
//
// This is the actual container for a Pinny's content. This is added automically
// by Pinny, so you do not need to use it in your code
//
//
// Notes:
//
// 1. `display: flex` is coming from `.pinny__wrapper`
// 2. This allows the content to grow or shrink as necessary based on content
//    and the header/footer

.pinny__content {
    overflow: auto;
    flex: 1; // 1, 2

    -webkit-overflow-scrolling: touch;
}


// Pinny: Hidden
// -------------
//
// We polyfill the hidden attribute here to ensure it hides all content when
// applied. Pinny uses [hidden] to hide content from FOUT before the plugin is
// initialized.

[hidden] {
    display: none !important;
}

// Pinny Theme
// ===========
//
// This is the defauly Pinny Theme!
//
// This theme is OPTIONAL

.pinny {
    box-shadow: 0 0 5px 2px rgba(black, 0.25);
}


// Pinny: Header
// -------------

.pinny__header {
    position: relative;

    display: flex;
    padding: 0 5px;
    border-bottom: 1px solid #ededed;

    background: white;
}


// Pinny: Title
// ------------

.pinny__title {
    flex: 1;
    margin: 0;
    padding: 10px;

    font-size: 1.2em;
}


// Pinny: Close Button
// -------------------
//
// Notes:
//
// 1. Hide the "close" text, visually

.pinny__close {
    overflow: hidden;
    flex-shrink: 0;
    width: 44px;
    height: 44px;
    padding: 0;
    border: 0;

    background: none;

    text-indent: 100%; // 1

    -webkit-appearance: none;
    -webkit-tap-highlight-color: rgba(black, 0);
}


// Pinny: Close Button Icon
// ------------------------
//
// This creates the "X" shape
//
//
// Notes:
//
// 1. Pseudo elements absolutely positioned relative to the parent `.pinny__close`
// 2. Center vertically and horizontally

.pinny__close { // sass-lint:disable-line no-mergeable-selectors
    position: relative; // 1

    &::before,
    &::after {
        content: '';

        position: absolute; // 1
        top: 50%; // 2
        left: 50%; // 2
        z-index: 2;

        display: block;
        width: 20px;
        height: 2px;
        margin-top: -1px; // 2
        margin-left: -10px; // 2

        border-radius: 2px;
        background: #59adeb;

        pointer-events: none;
    }

    &::before {
        transform: rotate(-45deg);
    }

    &::after {
        transform: rotate(45deg);
    }

    &:active {
        &::before,
        &::after {
            background: #3e7cc6;
        }
    }
}


// Pinny: Content
// --------------

.pinny__content {
    padding: 10px;
}